{"ast":null,"code":"var _jsxFileName = \"E:\\\\ZEOTAP\\\\spreadsheet-clone\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useSpreadsheetContext } from \"./context/SpreadsheetContext\"; // This should work now\nimport Toolbar from \"./components/Toolbar.jsx\";\nimport FormulaBar from \"./components/FormulaBar.jsx\";\nimport Spreadsheet from \"./components/Spreadsheet.jsx\";\nimport { SpreadsheetProvider } from \"./context/SpreadsheetContext\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    cells,\n    setCells,\n    formulas,\n    setFormulas,\n    rows,\n    setRows,\n    cols,\n    setCols\n  } = useSpreadsheetContext(); // Now you can use the context state\n\n  // Load spreadsheet data from backend on load\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/spreadsheet\").then(response => setCells(response.data));\n  }, [setCells]);\n\n  // Handle input change (data entry)\n  const handleCellChange = (e, row, col) => {\n    const newCells = [...cells];\n    newCells[row][col] = e.target.value;\n    setCells(newCells);\n    axios.post('http://localhost:5000/updateCell', {\n      row,\n      col,\n      value: e.target.value\n    }).then(() => {\n      console.log('Cell updated in backend');\n    }).catch(err => console.error(err));\n  };\n\n  // Add row or column\n  const addRow = () => setRows(rows + 1);\n  const addCol = () => setCols(cols + 1);\n\n  // Render cells dynamically based on rows and columns\n  const renderCells = () => {\n    let cellsArray = [];\n    for (let row = 0; row < rows; row++) {\n      let rowCells = [];\n      for (let col = 0; col < cols; col++) {\n        rowCells.push(/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: cells[row] && cells[row][col],\n          onChange: e => handleCellChange(e, row, col),\n          className: \"cell\"\n        }, `${row}-${col}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this));\n      }\n      cellsArray.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: rowCells\n      }, row, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 23\n      }, this));\n    }\n    return cellsArray;\n  };\n  return /*#__PURE__*/_jsxDEV(SpreadsheetProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormulaBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spreadsheet-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addRow,\n          children: \"Add Row\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addCol,\n          children: \"Add Column\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spreadsheet-grid\",\n        children: renderCells()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Spreadsheet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ezmt7R7nremz6JkUD6C52x87SU0=\", false, function () {\n  return [useSpreadsheetContext];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","axios","useSpreadsheetContext","Toolbar","FormulaBar","Spreadsheet","SpreadsheetProvider","jsxDEV","_jsxDEV","App","_s","cells","setCells","formulas","setFormulas","rows","setRows","cols","setCols","get","then","response","data","handleCellChange","e","row","col","newCells","target","value","post","console","log","catch","err","error","addRow","addCol","renderCells","cellsArray","rowCells","push","type","onChange","className","fileName","_jsxFileName","lineNumber","columnNumber","children","onClick","_c","$RefreshReg$"],"sources":["E:/ZEOTAP/spreadsheet-clone/frontend/src/App.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useSpreadsheetContext } from \"./context/SpreadsheetContext\";  // This should work now\nimport Toolbar from \"./components/Toolbar.jsx\";\nimport FormulaBar from \"./components/FormulaBar.jsx\";\nimport Spreadsheet from \"./components/Spreadsheet.jsx\";\nimport { SpreadsheetProvider } from \"./context/SpreadsheetContext\";\nimport './App.css';\n\nfunction App() {\n  const {\n    cells,\n    setCells,\n    formulas,\n    setFormulas,\n    rows,\n    setRows,\n    cols,\n    setCols\n  } = useSpreadsheetContext(); // Now you can use the context state\n\n  // Load spreadsheet data from backend on load\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/spreadsheet\")\n      .then(response => setCells(response.data));\n  }, [setCells]);\n\n  // Handle input change (data entry)\n  const handleCellChange = (e, row, col) => {\n    const newCells = [...cells];\n    newCells[row][col] = e.target.value;\n    setCells(newCells);\n    axios.post('http://localhost:5000/updateCell', {\n      row, col, value: e.target.value\n    }).then(() => {\n      console.log('Cell updated in backend');\n    }).catch(err => console.error(err));\n  };\n\n  // Add row or column\n  const addRow = () => setRows(rows + 1);\n  const addCol = () => setCols(cols + 1);\n\n  // Render cells dynamically based on rows and columns\n  const renderCells = () => {\n    let cellsArray = [];\n    for (let row = 0; row < rows; row++) {\n      let rowCells = [];\n      for (let col = 0; col < cols; col++) {\n        rowCells.push(\n          <input\n            type=\"text\"\n            key={`${row}-${col}`}\n            value={cells[row] && cells[row][col]}\n            onChange={(e) => handleCellChange(e, row, col)}\n            className=\"cell\"\n          />\n        );\n      }\n      cellsArray.push(<div key={row} className=\"row\">{rowCells}</div>);\n    }\n    return cellsArray;\n  };\n\n  return (\n    <SpreadsheetProvider>\n      <div className=\"app\">\n        <Toolbar />\n        <FormulaBar />\n        <div className=\"spreadsheet-controls\">\n          <button onClick={addRow}>Add Row</button>\n          <button onClick={addCol}>Add Column</button>\n        </div>\n        <div className=\"spreadsheet-grid\">\n          {renderCells()}\n        </div>\n        <Spreadsheet />\n      </div>\n    </SpreadsheetProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}