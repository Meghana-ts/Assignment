{"ast":null,"code":"var _jsxFileName = \"E:\\\\ZEOTAP\\\\spreadsheet-clone\\\\frontend\\\\src\\\\context\\\\SpreadsheetContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SpreadsheetContext = /*#__PURE__*/createContext();\nexport const SpreadsheetProvider = ({\n  children\n}) => {\n  _s();\n  const [data, setData] = useState([Array(10).fill(\"\")]);\n  const updateCell = (rowIndex, colIndex, value) => {\n    const updatedData = [...data];\n    updatedData[rowIndex][colIndex] = value;\n    setData(updatedData);\n  };\n  const addRow = () => setData([...data, Array(data[0].length).fill(\"\")]);\n  const addColumn = () => setData(data.map(row => [...row, \"\"]));\n  const calculateFormula = formula => {\n    console.log(\"Formula applied:\", formula);\n    // Add formula logic here using mathjs\n  };\n  return /*#__PURE__*/_jsxDEV(SpreadsheetContext.Provider, {\n    value: {\n      data,\n      updateCell,\n      addRow,\n      addColumn,\n      calculateFormula\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(SpreadsheetProvider, \"JQQeGAS5H2yhuJ+mo7h77V9uGB8=\");\n_c = SpreadsheetProvider;\nvar _c;\n$RefreshReg$(_c, \"SpreadsheetProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","SpreadsheetContext","SpreadsheetProvider","children","_s","data","setData","Array","fill","updateCell","rowIndex","colIndex","value","updatedData","addRow","length","addColumn","map","row","calculateFormula","formula","console","log","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/ZEOTAP/spreadsheet-clone/frontend/src/context/SpreadsheetContext.js"],"sourcesContent":["import React, { createContext, useState } from \"react\";\r\n\r\nexport const SpreadsheetContext = createContext();\r\n\r\nexport const SpreadsheetProvider = ({ children }) => {\r\n  const [data, setData] = useState([Array(10).fill(\"\")]);\r\n\r\n  const updateCell = (rowIndex, colIndex, value) => {\r\n    const updatedData = [...data];\r\n    updatedData[rowIndex][colIndex] = value;\r\n    setData(updatedData);\r\n  };\r\n\r\n  const addRow = () => setData([...data, Array(data[0].length).fill(\"\")]);\r\n\r\n  const addColumn = () => setData(data.map((row) => [...row, \"\"]));\r\n\r\n  const calculateFormula = (formula) => {\r\n    console.log(\"Formula applied:\", formula);\r\n    // Add formula logic here using mathjs\r\n  };\r\n\r\n  return (\r\n    <SpreadsheetContext.Provider\r\n      value={{ data, updateCell, addRow, addColumn, calculateFormula }}\r\n    >\r\n      {children}\r\n    </SpreadsheetContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,OAAO,MAAMC,kBAAkB,gBAAGJ,aAAa,CAAC,CAAC;AAEjD,OAAO,MAAMK,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,CAACS,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;EAEtD,MAAMC,UAAU,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,KAAK,KAAK;IAChD,MAAMC,WAAW,GAAG,CAAC,GAAGR,IAAI,CAAC;IAC7BQ,WAAW,CAACH,QAAQ,CAAC,CAACC,QAAQ,CAAC,GAAGC,KAAK;IACvCN,OAAO,CAACO,WAAW,CAAC;EACtB,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAMR,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEE,KAAK,CAACF,IAAI,CAAC,CAAC,CAAC,CAACU,MAAM,CAAC,CAACP,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;EAEvE,MAAMQ,SAAS,GAAGA,CAAA,KAAMV,OAAO,CAACD,IAAI,CAACY,GAAG,CAAEC,GAAG,IAAK,CAAC,GAAGA,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;EAEhE,MAAMC,gBAAgB,GAAIC,OAAO,IAAK;IACpCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,OAAO,CAAC;IACxC;EACF,CAAC;EAED,oBACEpB,OAAA,CAACC,kBAAkB,CAACsB,QAAQ;IAC1BX,KAAK,EAAE;MAAEP,IAAI;MAAEI,UAAU;MAAEK,MAAM;MAAEE,SAAS;MAAEG;IAAiB,CAAE;IAAAhB,QAAA,EAEhEA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACkB,CAAC;AAElC,CAAC;AAACvB,EAAA,CAzBWF,mBAAmB;AAAA0B,EAAA,GAAnB1B,mBAAmB;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}